#!/usr/bin/env python3
# -*- coding: utf-8 -*-
"""
Author: Firas Adleh
Date: 2024-09-01
Version: 1.0
Description: Uses other script 'convert_3d_front_apartment.py' to convert apartments folders created by  3D-FRONT-ToolBox 'json2obj.py' to a final one gltf file for each apartment containing all furniture models and meshes.
"""

import json
import os
import subprocess
import sys
sys.path.append(os.path.abspath(os.path.join(os.path.dirname(__file__), '..')))
import configs
from functions import get_3d_front_room_sizes_and_total

def get_3d_front_room_sizes_and_total_loc(file_path):
    with open(file_path, 'r') as file:
        data = json.load(file)
    room_sizes = {}
    total_size = 0
    room_count = {}
    bed_living_dining_size = 0

    # Navigate to scene -> room and extract sizes
    for room in data.get('scene', {}).get('room', []):
        room_type = room.get('type')
        if 'bedroom' in room_type.lower() or 'kidsroom' in room_type.lower() or 'nannyroom' in room_type.lower():
            room_type = 'Bedroom'
        if 'bathroom' in room_type.lower():
            room_type = 'Bathroom'

        size = room.get('size', 0)
        
        if size > 0:
            # Update the dictionary with room sizes
            #room_sizes[room_type] = room_sizes.get(room_type, 0) + size
            # Collect sizes for each room type
            if room_type not in room_sizes:
                room_sizes[room_type] = []
            room_sizes[room_type].append(size)

        total_size += size
        if 'bedroom' in room_type.lower() or 'living' in room_type.lower() or 'dining' in room_type.lower():
            bed_living_dining_size += size

        # Count rooms per type
        room_count[room_type] = room_count.get(room_type, 0) + 1
    
    if bed_living_dining_size == 0:
        print('bad sizes = 0 : ',file_path )
    return room_sizes, total_size, room_count, bed_living_dining_size

#########################################################################################
##############     converts folders generated by jspn2obj into .glb files    ############
#########################################################################################

jspn2obj_directory  = "/home/fpc/Uni/RL/repos/3D-FRONT-ToolBox/out/"
#jspn2obj_directory  = "/home/fpc/Uni/RL/repos/3D-FRONT-ToolBox/out_100_random_scenes/"

JSON_3d_front_folder_path = '/home/user2024/Documents/repos/ai-driven-3d-apartment-generator/InstructScene/dataset/3D-FRONT/3D-FRONT/'


out_folderpath = os.path.join(os.path.dirname(os.path.abspath(__file__)), "3d_front_scenes")

directory = os.fsencode(jspn2obj_directory)
#/home/fpc/blender-4.1.1-linux-x64/blender -b -P /home/user2024/Documents/repos/ai-driven-3d-apartment-generator/import_3d_front_apartment.py -- --jspn2obj_house_path /home/fpc/Uni/RL/repos/3D-FRONT-ToolBox/out/20365dbe-40b9-4cc9-b0ef-d7d6b89799ab --glb_save_path /home/fpc/Uni/RL/repos/3D-FRONT-ToolBox/out/20365dbe-40b9-4cc9-b0ef-d7d6b89799ab/scene.glb
all_jspn2obj_directories = os.listdir(directory)
for i, file in enumerate(all_jspn2obj_directories):
    
    filename = os.fsdecode(file)    

    BLENDER_SCRIPT_PATH = os.path.join(
        os.path.dirname(os.path.abspath(__file__)),
        "convert_3d_front_apartment.py"
    )

    jspn2obj_scene_directory = os.path.join(
        jspn2obj_directory,
        filename
    )

    out_filepath = os.path.join(
        out_folderpath,
        filename +'.glb'
    )

    args = [
        configs.constants['blender_path'],
        "-b", "-P", BLENDER_SCRIPT_PATH,
        "--",
        "--jspn2obj_house_path", jspn2obj_scene_directory,
        "--glb_save_path", out_filepath,
    ]

    if not os.path.isfile(out_filepath):

        JSON_3d_front_file_path = os.path.join(JSON_3d_front_folder_path, filename+'.json')
        #room_sizes, total_size, room_count, bed_living_dining_size = get_3d_front_room_sizes_and_total(JSON_3d_front_file_path)
        room_sizes, total_size, room_count, bed_living_dining_size, bed_living_dining_objects_count, test_bed_living_dining_objects_count, room_objects_count = get_3d_front_room_sizes_and_total(JSON_3d_front_file_path)

        if bed_living_dining_size < 20:
            print('room sizes = ', bed_living_dining_size,', bad file : ', filename)
        elif bed_living_dining_objects_count < 15:
            print('bed_living_dining_objects_count = ', bed_living_dining_objects_count,', bad file : ', filename)
        else:
            # Execute the command
            print(i,'/',len(all_jspn2obj_directories)," ++++++++++++++++++ ", filename)
            with open(os.devnull, 'w') as fnull:
                subprocess.run(args, stdout=fnull, stderr=fnull)
                
            subprocess.check_call(args) #, stdout=subprocess.DEVNULL, stderr=subprocess.STDOUT
    else:
        print(i,'/',len(all_jspn2obj_directories)," already converted ", filename)
    #exit()