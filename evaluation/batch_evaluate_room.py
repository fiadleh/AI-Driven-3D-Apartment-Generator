#!/usr/bin/env python3
# -*- coding: utf-8 -*-
"""
Author: Firas Adleh
Date: 2024-09-01
Version: 1.0
Description: Calls other script 'evaluate_single_room.py' to evaluate a group of 3D rooms generated by instruct scene.
"""

import os
import shutil
import subprocess
import sys
import time
sys.path.append(os.path.abspath(os.path.join(os.path.dirname(__file__), '..')))
import configs
#execluded/c
glb_directory  = configs.constants['app_path'] + "3d_front_scenes/"#"/home/user2024/Documents/repos/ai-driven-3d-apartment-generator/3d_front_scenes/"
#glb_directory  = configs.constants['app_path'] + "evaluation_scenes/"
#glb_directory  = "/home/user2024/Documents/repos/ai-driven-3d-apartment-generator/evaluation_scenes_before_adjust"

# bedrooms
glb_directory  = configs.constants['instruct_scene_path'] + "/out/bedroom_sgdiffusion_vq_objfeat/generated_scenes"
output_directory  = configs.constants['app_path'] + "evaluation/instruct_scene_eval/bedroom"

# livingrooms
glb_directory  = configs.constants['instruct_scene_path'] + "/out/livingroom_sgdiffusion_vq_objfeat/generated_scenes"
output_directory  = configs.constants['app_path'] + "evaluation/instruct_scene_eval/livingroom"

# diningrooms
glb_directory  = configs.constants['instruct_scene_path'] + "/out/diningroom_sgdiffusion_vq_objfeat/generated_scenes"
output_directory  = configs.constants['app_path'] + "evaluation/instruct_scene_eval/diningroom"

directory = os.fsencode(glb_directory)
#/home/fpc/blender-4.1.1-linux-x64/blender -b -P /home/user2024/Documents/repos/ai-driven-3d-apartment-generator/calculate_dead_zone.py -- --glb_filepath /home/user2024/Documents/repos/ai-driven-3d-apartment-generator/3d_front_scenes/d4372f50-5d15-4f80-a9c9-0159f4010215.glb

#/home/fpc/blender-4.1.1-linux-x64/blender -b -P /home/user2024/Documents/repos/ai-driven-3d-apartment-generator/calculate_dead_zone.py -- --glb_filepath /home/user2024/Documents/repos/ai-driven-3d-apartment-generator/out/adjust.glb

BLENDER_SCRIPT_PATH = os.path.join(
    os.path.dirname(os.path.abspath(__file__)),
    "evaluate_single.py"
)

all_glb_paths= os.listdir(directory)
for i, file in enumerate(all_glb_paths):
    folder_name = os.fsdecode(file)    
    folder_path = glb_directory + "/"+ str(folder_name)
    glb_filepath = folder_path+"/scene.glb"
    #print(file)
    if os.path.isdir(folder_path) and os.path.isfile(glb_filepath) and not os.path.isfile(folder_path+"/scene.json"):
        args = [
            configs.constants['blender_path'],
            "-b", "-P", BLENDER_SCRIPT_PATH,
            "--",
            "--glb_filepath", glb_filepath,
            "--body_type", 'none', # 'ellipses' , 'cylinders' , ''
            #"--make_col_file",
        ]
        #print(args)
        #exit()
        print(i,'/',len(all_glb_paths)," ++++++++++++++++++ ", folder_name, flush=True)


        #with open(os.devnull, 'w') as fnull:
        #    subprocess.run(args, stdout=fnull, stderr=fnull)

        start_time = time.time()
        #with open(os.devnull, 'w') as fnull:
        #    subprocess.run(args, stdout=fnull, stderr=fnull)
        print("--- %s seconds ---" % (round(time.time() - start_time)))
        
        subprocess.check_call(args)
        shutil.copy(folder_path+"/scene.json", output_directory+"/"+ str(folder_name)+ ".json")
        #exit()


